version: '3'

services:
  database:
    restart: always
    container_name: database
    image: mysql:5.7
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    volumes:
      - db-data:/var/lib/mysql
      - ./sql:/docker-entrypoint-initdb.d
    networks:
      ethos:

  redis:
    restart: always
    image: redis:latest
    ports:
      - '6379:6379'
    networks:
      ethos:

  web:
    restart: always
    build: .
    command: python manage.py runserver 0.0.0.0:8000
    depends_on:
      - database
      - redis
    env_file:
      - .env
    volumes:
      - .:/code
    networks:
      ethos:

  nginx:
    container_name: nginx
    image: nginx:1.18
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx:/etc/nginx/conf.d
      - letsencrypt:/etc/letsencrypt
      - letsencrypt:/var/www/certbot
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    networks:
      ethos:

  certbot:
    image: certbot/certbot
    volumes:
      - letsencrypt:/etc/letsencrypt
      - letsencrypt:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    networks:
      ethos:

volumes:
  db-data:
    external:
      name: db-data
  letsencrypt:
    external:
      name: letsencrypt

networks:
  ethos:
