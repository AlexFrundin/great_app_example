"""
Django settings for ethos_network project.

Generated by 'django-admin startproject' using Django 3.0.7.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

CORS_ORIGIN_ALLOW_ALL = True

ALLOWED_HOSTS = [
    'https://ja5i7sw6ji.execute-api.eu-west-2.amazonaws.com/prod',
    'ja5i7sw6ji.execute-api.eu-west-2.amazonaws.com/prod',
    'ja5i7sw6ji.execute-api.eu-west-2.amazonaws.com',
    'https://api.theethosnetwork.com',
    'api.theethosnetwork.com',
    'ethos-api.rocketech.net',
    '0.0.0.0',
    '172.26.98.207',
    'backend',
]

# Application definition

INSTALLED_APPS = [
    # 'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    # 'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'rest_framework_swagger',
    'django_extensions',
    'content.apps.ContentConfig',
    'users.apps.UsersConfig',
    'causes_subcauses.apps.CausesSubcausesConfig',
    'admin_users.apps.AdminUsersConfig',
    'user_interest.apps.UserInterestConfig',
    'post.apps.PostConfig',
    'admin_causes.apps.AdminCausesConfig',
    'post_explore.apps.PostExploreConfig',
    'other_user_profile.apps.OtherUserProfileConfig',
    'admin_post_reports.apps.AdminPostReportsConfig',
    'admin_content_moderation.apps.AdminContentModerationConfig',
    'notifications.apps.NotificationsConfig',
    'chat.apps.ChatConfig',
]

MIDDLEWARE = [
    # 'django.middleware.security.SecurityMiddleware',
    # 'django.contrib.sessions.middleware.SessionMiddleware',
    # 'django.middleware.common.CommonMiddleware',
    # 'django.middleware.csrf.CsrfViewMiddleware',
    # 'django.contrib.auth.middleware.AuthenticationMiddleware',
    # 'django.contrib.messages.middleware.MessageMiddleware',
    # 'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'corsheaders.middleware.CorsMiddleware',
]

ROOT_URLCONF = 'ethos_network.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ['templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                # 'django.template.context_processors.debug',
                # 'django.template.context_processors.request',
                # 'django.contrib.auth.context_processors.auth',
                # 'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'ethos_network.wsgi.application'

# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': os.environ.get('DB_NAME'),
        'USER': os.environ.get('DB_USER'),
        'PASSWORD': os.environ.get('DB_PASSWORD'),
        # Or an IP Address that your DB is hosted on
        'HOST': os.environ.get('DB_HOST'),
        'PORT': '3306',
    }
}

# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

STATIC_URL = '/static/'
# MEDIA_URL = '/media/'
# MEDIA_ROOT = f'{BASE_DIR}/{MEDIA_URL}'
# STATIC_ROOT = f'{BASE_DIR}/static/'

"""
defining JWT Constants
"""

BUCKET_NAME = 'ethos-app-storage'
REGION = 'eu-west-2'


class JwtConstants():
    JWT_ALGORITHM = 'HS256'
    JWT_EXP_DELTA_SECONDS = 3600  # valid upto 1 hour
    JWT_REF_EXP_DELTA_SECONDS = 5184000  # valid upto 60 days
    TOKEN_SECRET = os.environ.get('TOKEN_SECRET')
    REFRESH_TOKEN_SECRET = os.environ.get('REFRESH_TOKEN_SECRET')
    REFRESH_TOKEN_SALT = os.environ.get('REFRESH_TOKEN_SALT')


class EthosCommonConstants():
    CONTENT_TYPE_JSON = "application/json"
    EMAIL_HOST_USER = "The Ethos Network <team@theethosnetwork.com>"
    ADMIN_EMAIL_ID = "team@theethosnetwork.com"
    REDIS_HOST = os.environ.get('REDIS_HOST')
    REDIS_EXPIRATION = 60 * 60 * 24  # Set data in Redis for 24 hours
    ACCEPTED_IMG_TYPES = ['jpg', 'JPG', 'jpeg', 'JPEG', 'png', 'PNG']
    ACCEPTED_VIDEO_TYPES = ['mp4', 'MP4', 'mov', 'MOV']


class EmailConstants():
    verificationLink = 'https://admin.theethosnetwork.com/'


class FcmNotificationConstants():
    api_key = os.environ.get('FIREBASE_SERVER_KEY')


# SMTP DETAILS
EMAIL_HOST = os.environ.get("EMAIL_HOST", "email-smtp.eu-west-2.amazonaws.com")
EMAIL_HOST_USER = os.environ.get('EMAIL_HOST_USER')
EMAIL_HOST_PASSWORD = os.environ.get('EMAIL_HOST_PASSWORD')
EMAIL_PORT = 465
EMAIL_USE_SSL = True

REST_FRAMEWORK = {
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 10
}
